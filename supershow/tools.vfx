\ =============================================================================
\ Interactive tools
\ =============================================================================

also engineer~

|| 0 value c

|| : (resurrect) ( - )
    benched off me init ;

: init-by-class ( class - )
    to c
    actives> me c is? if (resurrect) then ;
    
cstring update-name$

|| : hone-update ( - )
    update-name$ count f" update %s" evaluate ;
    
: update ( - <class> )
    \ Live update actor class
    {: | class :}
    bl parse -% 2dup f" %s%%" >pad find if
        >body to class
        update-name$ place
    else
        -1 abort" Class not found!"
    then
    ['] hone-update honing ! 
    update-name$ count f" scripts\%s.vfx" >try
    class init-by-class
    update-name$ count f" %s~" $private ;

: .actors ( - )
    actives> cr me peek ;

: .temps ( - )
    temps> me free? ?exit cr me peek ;

: project ( - <name> )
    home-path$ count $cwd
    bl preparse f" spunk\project.bat %s" cr 2dup type shellcmd
    200 ms
    bl parse $cwd
    200 ms
    \ ['] dir >r
    ['] cartridge >r \ I have *no* idea why this pattern is required here.
                    \ I think Windows doesn't like something about it.
                    \ SWITCH works fine if run directly after running PROJECT,
                    \ and also if the shell command is removed.
                    \ Reason #8256 why I wish I could avoid host interaction
;
    
|| : has-image? f" %s.png" >pad find nip ;

: script ( - <name> )
    \ Create an actor script containing some boilerplate.
    {: | n[ 256 ] #1 :}
    bl parse n[ place
    n[ count f" scripts\%s.vfx" file-exists? not if
        n[ count f" scripts\%s.vfx" file[
            n[ count f" actor-class %s%%" line,
            nl,
            n[ count f" %s%% :: init ( - )" line,
            n[ count has-image? if
                n[ count f"     %s.png bmp !" line,
            then
            s"     act>" line,
            s"         ;" line,
        file]
        n[ count f" scripts\%s.vfx" included
    else
        cr ." Script already exists, locating"
    then
    n[ count f" locate %s%%" evaluate ;
    
: edit ( - <name> )
    bl parse f" locate %s%%" evaluate ;