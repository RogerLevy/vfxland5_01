\ =============================================================================
\ Tileset
\ =============================================================================

|| variable last-tileset
|| : bmpw  dup if al_get_bitmap_width then ;
|| : bmph  dup if al_get_bitmap_height then ;
|| : init-tileset ( tileset - ) \ don't modify, called in 2 places
    cell+ @+ swap @+ bitmap@ swap @+ swap @
        | th tw b n |
    b -exit
    next-bmp# @ n next-bmp# !
    b bmph th - 1 + for
        b bmpw tw - 1 + for
            b i j tw th al_create_sub_bitmap +bitmap drop
        tw +loop
    th +loop
    next-bmp# ! ;

: baseid@ ( tileset - n)
    cell+ @ ;

: tile ( tileset n - n)
    swap baseid@ + ;

\ link , base bmp id , parent bmp id , tw , th ,
: tileset ( bmp# tw th - <name> ) ( - tileset )
    2>r dup bitmap@ 2r> locals| th tw b p |
    create
        here
        last-tileset link next-bmp# @ , p , tw , th ,
        init-tileset
        b bmpw tw / 
            b bmph th / * next-bmp# +! ;

: init-tilesets ( - )
    last-tileset begin @ ?dup while dup init-tileset repeat ;

|| : reload-tileset ( tileset - )
    dup cell+ @+ swap @+ bitmap@ swap @+ swap @
        | th tw b n ts |
    b -exit
    b bmph th - 1 + for
        b bmpw tw - 1 + for
            n bitmap@ al_destroy_bitmap
            1 +to n
        tw +loop
    th +loop
    ts init-tileset ;    

: reload-tilesets ( - )
    last-tileset begin @ ?dup while dup reload-tileset repeat ;

: is-tile? ( n - f )
    bitmap@ dup -exit al_is_sub_bitmap ;

\ =============================================================================
\ Tilemap
\ =============================================================================

variable pile

|| : nr  0 pen y@ gap + at ;
|| : tile+  pile @ + put gap 0 +at ;

: lay ( a - )
    batch> tmh for tmw for @+ tile+ loop nr loop drop ;

: spot ( col row a - a )
    -rot 0 0 tmw 1 - tmh 1 - 2clamp tmw * + cells + ;

: xy>cr ( x. y. - col row )
    gap dup 2/ 2p>s ;

\ =============================================================================
\ Tile metadata
\ =============================================================================

create metas #bitmaps cells allot&erase
: meta ( n - n ) pile @ + cells metas + @ ;
: collectible?  meta $20 and 0<> ;
: destructible?  meta $80 and 0<> ;
: solid?  meta $0F and $0F = ;
: instakill?  meta $40 and 0<> ;
: trap?  meta $10 and 0<> ;

: load-metas ( a:fn len:fn tileset - )
    >r
        here >r >datadir file,
        r> here over -
    r> baseid@ cells metas + swap move ;
