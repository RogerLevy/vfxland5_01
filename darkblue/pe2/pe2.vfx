include %idir%/smooth.vfx
require %idir%/../../lib/mouse.vfx
require %idir%/../../supershow/ui/ui.vfx

variable recording
variable waiting

#max-coords 2 cells stack raw-coords
#max-coords 2 cells stack coords

|| static size
|| : class:  /obj 4 to /obj bl word create-class lastbody ;
|| : property ( - <name> ) ( - a ) cell ofield ; 
|| : class;  /obj swap -> size ! to /obj ;
|| : (!classes)  [[ dup cla ! ]] -1 ;
|| : object-array ( n class - <name> ) ( - array )
    dup >r -> size @ array
    r> ['] (!classes) lastbody each drop ;
|| : object  here >r dup , -> size @ cell- allot&erase r> ;

class: ui-path
class;

: @coords
    0 raw-coords [] 0 coords [] raw-coords #items raw-coords /item * move
    raw-coords #items coords >cnt ! ;

: start-recording
    recording on
    raw-coords vacate 
    waiting on
    cr ." Armed..." ;

: stop-recording
    recording off
    cr raw-coords #items f" Recorded %n points" type
    @coords ;

create pmousex 0 , 0 ,
: ?record ( - )
    <space> pressed? if
        recording @ 0= if
            start-recording
        else
            stop-recording
        then
    then
    recording @ if
        waiting @ if
            mickey or if
                cr ." Recording..."
                waiting off
            then
        then
        waiting @ not if
            mouse 2>. pmousex 2!
            pmousex raw-coords push-data
        then
    then ;

: smooth ( strength. threshold. radius - )
    smoothing
    raw-coords coords smooth-coords-old ;

: ?smooth ( - )
    <s> pressed? if
        raw-coords coords smooth-coords-old
    then ;

: ?coords ( - array )
    recording @ if raw-coords else coords then ;

ui-path :: init
    act>
        ?record ?smooth
    draw>
        ?coords #items for
            i ?coords [] 2@ 2.> at
            pixel.png put
        loop ;

root [[
    0 0 at element el: pe2-ui [[
        0 0 at ui-path el: ui-path [[
        ]]
    ]]
]]

: events ;

: pe2
    show> get-mouse ui ;