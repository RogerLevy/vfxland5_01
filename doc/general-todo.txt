
2025/09/11
[ ] (Engineer) Make game pause on focus lost only if REPL is active
    Conditional pause behavior based on whether the REPL/IDE is running.

[ ] (Tileset System) Support tilesets with bitmaps of different basename
    Allow tileset loading from bitmaps that don't match the tileset's base filename.

[ ] (Asset System) Detect new files and create totems from them
    Implement automatic file detection and totem creation system.

2025/09/03
[x] (Engineer) Protect against buffer overrun when deserializing cstrings
    Add bounds checking and safe string handling to prevent buffer overflow vulnerabilities.

2025/09/02
[ ] (NIBS) (CRITICAL) Fix properties sharing serialization configuration across traits and classes
    Each property needs to have an independent configuration per-classifier.

[ ] (Engineer) (CRITICAL) Add protection against circular dependencies when honing is enabled

2025/08/23
[x] (Engineer) Implement new LD tool
    Consolidate TRY and LD functionality.

2025/08/20
[ ] (Engineer) Improve history buffer API 
    - It should provide an "emit" style interface, not a line-based interface.
    - Get rid of the string buffer in ide3.vfx; this will prevent memory corruption

[ ] (NIBS) Make it illegal to do "<object> -> <static>" when validations enabled
    Prevent using -> operator to access static fields from object instances.
    The two ways to access statics are implicit or through a class.
        - `[[ mystatic @ ]]`
        - `cla @ -> mystatic @`  or  `myclass -> mystatic @`
    Edit: This is probably bad.  Instead, we should enhance -> to detect static
    fields and compile the appropriate address resolution.

2025/08/17
[x] (NIBS) Investigate protocol redefinition propagation not working as expected
    Redefining _OBJECT:INFO doesn't seem to propagate to dependents such as _ARRAY.
    Update: Couldn't reproduce with a simple test.  Could be a subtle case.

[x] (IDE) Simplify stack display to show one format at a time with cycling hotkey
    Change stack display to show one display type at a time instead of all four.
    Add global immutable hotkey to cycle between display types.

2025/08/16
[ ] (NIBS) Add runtime protocol reassignment word REASSIGN
    Implement REASSIGN ( xt protocol-xt class - ) to dynamically change protocol implementations at runtime.

[ ] (Asset System) Add multiple file extension support to totems
    Implement filtering mechanism so totem classes can specify supported file extensions.
    Edit: Might not be necessary?  Sub-classing with specific file extensions might be enough. 
    Alternatively, make LOAD-DEFAULT-DIR work recursively on classes and their descendents.

[ ] (Engineer) Look into adding anonymous functions
    Investigate implementing `[: ;]` syntax for inline anonymous functions.

[ ] (NIBS) Consider reversing word order of DERIVE
    Change syntax from `<class> derive` to `derive <class>` for consistency.

2025/08/15
[ ] (Engineer) Integrate mouse support into Engineer
    Add mouse input handling to Engineer's core input system.
    Enable mouse-driven interaction in the IDE and development tools.

[ ] (VSCode Extension) Study Tab Nav extension to fix word-by-word navigation
    Research Tab Nav extension implementation to create a custom extension that fixes
    VSCode's word navigation behavior for Forth code.

[x] (VSCode Extension) Add code formatter to vfx-forth-simple extension
    Implement automatic code formatting for VFX Forth source files.
    Should handle indentation, alignment, and standard Forth formatting conventions.

[x] (Engineer) Add file error reporting to misc.vfx
    Replace silent THROW calls with descriptive error messages in file operations.
    Current file@ and related words silently fail causing mysterious bugs.
    Throw actual file error codes instead of directly throwing the result of each file 
    access word which is just 0 / -1.

[ ] (Engineer) Implement FIND-HOTKEY as a built-in feature
    Add vocabulary-scoped hotkey dispatch system using modifier patterns (CTRL+S, ALT+F4, etc.).
    Vocabularies can define hotkey words that get automatically discovered and executed.

[x] (NIBS) Implement serialization support
    Add property-level serialization metadata and format-agnostic serialization system.
    Properties declare their serialization metadata (type, save flag) and global serializers
    walk properties to generate binary, XML, or other formats automatically.

2025/08/14
[ ] (NIBS) Implement trait inheritance
    Enable traits to derive from other traits using single inheritance.
    Supports cleaner separation of abstract concepts from concrete implementations.
    See doc/trait-inheritance-spec.md for full specification.
    [ ] Add trait derivation syntax and compiler support
    [ ] Runtime lineage validation for explicit parent calls (safety feature)
    Edit: Is this actually needed for anything???

2025/08/11
[x] (NIBS) Update compact class syntax parser
    Every classifier token has distinguishing syntax now:
    %class - derive a class
    +trait - add a trait 
    "trait" - add a trait's capabilities only 
    
[x] (NIBS) Add CAN? capability checking word.
    Similar to IS? but checks for capability as opposed to identity.
    Accepts either traits or protocol XT's.

[-] (NIBS) Add protocol conflict protections
    [x] Track which trait added each protocol to a class using an extra
        static field per protocol.
    [x] In APPLY-TRAIT, if a trait tries to write to a protocol implementation
        XT that is already taken by another trait, throw an error.
    [x] If a class implements a protocol, assign the class to it in the extra
        static field.  Use this to determine whether to propagate a protocol
        in DEFINE-PROTOCOL.
    [ ] Implement "triggers" - special protocols that can be chained, allowing
        all implementations supported by a class to execute.
        (No parameters allowed.)
        `_totem trigger: init ( - ) ;`
    [ ] If needed, establish a standard way to alias conflicting trait protocols
        - Easy solution:
            Directly call them.  `_totem:init`  (assumes object is scoped)
        - More verbose solution:
            Create wrappers that take an object:
            `: totem-init ( _totem - ) [[ _totem:init ]] ;`

[x] (NIBS) Make :: syntax consistent with other NIBS words - allow classifier inference when inside classifier blocks.

[x] (NIBS) Rename 'S to ->

[ ] (NIBS) Add bracket matching validation for object binding operators `[[ ]]`.
    Check for missing opening or closing double brackets.

[x] (NIBS) Keep track of class protocols in their protocol list.
    Classes should maintain their protocol-list for introspection and debugging.

[ ] (NIBS) Add compile-time validations support for protocols.
    Verify protocol implementations match expected signatures.

[ ] Modify VFX Forth locals parser to handle buf[ ] patterns correctly.
    Currently creates locals named `buf[` instead of `buf`, making code less readable.

[x] Make use of :DERIVE to replace ACTOR-CLASS and :EVENT.
    Use on-derive hooks to automatically set up actor and event-specific behavior
    without special syntax.
    [x] Replace ACTOR-CLASS with standard class: syntax plus :DERIVE hook
    [ ] Replace :EVENT with standard class: syntax plus :DERIVE hook

[ ] Experimentally write a static asset analyzer.
    Implement bracket notation dependency discovery for automatic asset loading.
    Think through implications for interactive development and error reporting.

2025/08/08
[x] Investigate why editor isn't being opened on abort.

[x] Add trait:protocol identifier creation to (protocol:).
    Enable trait:protocol-name syntax for cleaner protocol references.

[x] Fix abort by setting AbortText.
    Currently aborting throws an exception due to the refactoring of system
    error handling

[ ] Consolidate .IP and .DATA into a single smart address-decoding word.
    Detect if address is colon word or data word and display appropriately.

2025/06/24
[x] Add `try`.

[x] Darkblue: add tweening module and perfect logo animation.

[x] Improve array defining syntax.

[ ] Integrate logging.

[x] Add debug intercept system.

[x] Improve the OOP system.
