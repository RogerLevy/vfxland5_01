actor-class man%

man.png 20 20 tileset man.ts
man.ts animation man.anm 0 1 range,
: r-edge  x @ x1 @ s>p + w1 @ s>p + ;
: l-edge  x @ x1 @ s>p + ;
: t-edge  y @ y1 @ s>p + h1 @ s>p + ;
: b-edge  y @ y1 @ s>p + ;
: traveled  dummy copy as> vx 2@ x 2+! me ;
0 value it
: ?hits
    me to it
    actives>
        me it = ?exit
        me it traveled hit? if
            it -> vx @ 0< if r-edge it [[ 0 vx ! x1 @ s>p - x ! ]] then
            it -> vx @ 0> if l-edge it [[ 0 vx ! w1 @ s>p - x1 @ s>p - x ! ]] then
            it -> vy @ 0< if t-edge it [[ 0 vy ! y1 @ s>p - y ! ]] then
            it -> vy @ 0> if b-edge it [[ 0 vy ! h1 @ s>p - y1 @ s>p - y ! ]] then
        then ;
: man-physics  vx 2@ x 2+!  ?hits  1. hp @ 8 * / a.spd ! ;
man :: _idle
    act>
        0. 0. vx 2!
        <left> held? if -1. vx ! exit then 
        <right> held? if 1. vx ! exit then 
        <up> held? if -1. vy ! exit then 
        <down> held? if 1. vy ! exit then ;
man :: init
    5 hp !  me to p1
    man.anm 1. cycle
    ['] man-physics phys !
    idle ;