\ Simple Solution
\ ---------------

\ Base format: class-name x y id prio [class-specific-data]
: save-actors ( filename - )
    w/o create-file throw >r
    actors each> ( actor )
        \ Write base data
        dup class-name r@ write-string
        dup 's x @ s>d r@ write-file throw
        dup 's y @ s>d r@ write-file throw
        dup 's id @ s>d r@ write-file throw
        dup 's prio @ s>d r@ write-file throw
        \ Let each class write its own data
        serialize-extra
    r> close-file throw ;

\ Per-Class Extensions
\ --------------------

\ Default: no extra data
actor :: serialize-extra ( file-handle - ) drop ;

\ Enemy class adds health and patrol points
enemy :: serialize-extra ( file-handle - )
    me 's health @ s>d swap write-file throw
    me 's patrol-target @ s>d swap write-file throw ;

\ Platform class adds movement speed
platform :: serialize-extra ( file-handle - )
    me 's speed @ s>d swap write-file throw ;

\ Loading With Dispatch
\ ---------------------

: load-actors ( filename - )
    clear-stage
    r/o open-file throw >r
    begin
        r@ read-string dup
    while ( class-name )
        \ Read base properties
        r@ read-cell  r@ read-cell  r@ read-cell  r@ read-cell
        ( class-name x y id prio )
        \ Create actor of correct class
        5 pick make-typed-actor ( actor )
        \ Let class read its extra data
        dup r@ swap deserialize-extra
    repeat drop
    r> close-file throw ;