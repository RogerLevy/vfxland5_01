\ ==============================================================================
\ Bestiary System
\ ==============================================================================

dictionary bestiary
variable current-enemy
0 value #1

: ,word  here bl parse dup >r here place r> 1 + allot ; 

\ Helper to get or create an enemy dictionary
: ?enemy-dict ( $ - dict )
    {: key | buf[ 256 ] :}
    key count buf[ place
    buf[ bestiary lookup @ ?dup if exit then
    wordlist dup
    buf[ bestiary lookup ! ;

: for: ( - <name> )
    bl word ?enemy-dict current-enemy ! ;

: hp: ( - <n> )
    bl parse evaluate c" hp" current-enemy @ lookup ! ;

: atk: ( n - )
    bl parse evaluate c" atk" current-enemy @ lookup ! ;

: gold: ( n - )
    bl parse evaluate c" gold" current-enemy @ lookup ! ;

: spd: ( f. - )
    bl parse evaluate c" spd" current-enemy @ lookup ! ;

: path: ( - <name> )
    ,word c" path" current-enemy @ lookup ! ;

: save-enemy ( -1 key$ a - -1 )
    {: key aval | edict :}
    aval @ to edict
    key count f" for: %s " #1 write-file drop
    c" hp" edict lookup @ f"  hp: %n " #1 write-file drop
    c" atk" edict lookup @ f"  atk: %n " #1 write-file drop
    c" gold" edict lookup @ f"  gold: %n " #1 write-file drop
    c" spd" edict lookup @ f"  spd: %p " #1 write-file drop
    c" path" edict lookup @ ?dup if
        count f"  path: %s " #1 write-file drop
    then
    s" " #1 write-line drop ;

: (save)  bestiary walk> save-enemy ;

: save ( - )
    s" enemies.vfx" w/o create-file throw to #1
    s" \ id            hp      atk         gold        spd         path" #1 write-line drop
    (save)
    #1 close-file drop
    cr ." Bestiary saved to enemies.vfx" ;
    
\ test
\ for: asdf hp: 1 path: asdfasdf
\ save