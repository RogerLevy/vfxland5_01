((
filesystem:
    worlds/
        worldname.wld
        worldname.map
        nnnn.scn
))
1 constant TILEMAP_FORMAT_VERSION
1 constant WORLD_FORMAT_VERSION

class: tilemap
    is-a _totem
    version: TILEMAP_FORMAT_VERSION
    prop w <save <int
    prop h <save <int
    prop data <addr
class;

: tm-size  w @ h @ * cells ;
: allot-tilemap  here data ! data-size allot&erase ;

: deser-me+ ( - ) ['] into-me desbin+ ;
: move+  ( src dest n - src' ) 
    {: src dest n :}
    src dest n move
    src n + ;
: ser-me, ( - ) me serbin, ;
: move, ( a len - ) dup >r here swap move r> allot ;

tilemap :: load ( - )
    des>
        deser-me+
        data @ tm-size move+ ;

tilemap :: _intake ( - )
    me new? if allot-tilemap then
    me load ;

tilemap :: _keep ( - )
    ser>
        ser-me,
        data @ tm-size move, ;

class: world
    is-a _totem
    version: WORLD_FORMAT_VERSION 
    extension: wld
    default-dir: dat/wld

    prop mtm <ref tilemap \ main tilemap
    prop mts <ref tileset \ main tileset
    
    256 prop mts-path$ <save <cstring
    prop _room# <save <int 

class;

: mts-path  mts-path$ count ;
: mtm-path  srcpath$ count -ext f" %s.map" ;

world :: _intake ( - )
    _totem:_intake
    mts-path tileset manifest mts ! 
    mtm-path tilemap manifest mtm ! ;
