\ ------------------------------------------------------------------------------
\ Nib 2.0 Introspection Tools
\ Claude wrote the initial version of this but it's been heavily modified
\ ------------------------------------------------------------------------------

|| 0 value target-class
|| 0 value target-bit
|| 0 value found-items
    
|| : find-parent ( thread# nfa - f )
    {: thread# nfa | body :}
    nfa name> >body to body
    body -> cla @ _class = if
        body -> classifier# @ target-bit = if
            ."        - " nfa count type cr 
            0  \ found it, stop walking
            1 +to found-items
        else -1 then
    else -1 then ;
    
|| : .parents ( classifier - )
    to target-class
    cr ."     Parents of " target-class body> >name count type ." :" cr
    
    0 to found-items
    #max-classifiers for
        i target-class -> can-table test-bit if
            \ Check if this bit represents a trait (not the class itself)
            i target-class -> classifier# @ <> if
                \ Find which trait has this classifier#
                \ This is a bit hacky - we walk the dictionary looking for traits
                i to target-bit
                ['] find-parent forth-wordlist WalkWordList
            then
        then
    loop
    
    found-items 0= if ."        (no parents derived)" cr then ;

|| : find-trait ( thread# nfa - f )
    {: thread# nfa | body :}
    nfa name> >body to body
    body -> cla @ _trait = if
        body -> classifier# @ target-bit = if
            ."        - " nfa count type
            target-bit target-class -> id-table test-bit 0= if
                ."  (capability only)"
            then
            cr 
            0  \ found it, stop walking
            1 +to found-items
        else -1 then
    else -1 then ;

|| : .traits ( classifier - )
    to target-class
    cr ."     Traits of " target-class body> >name count type ." :" cr
    
    0 to found-items
    #max-classifiers for
        i target-class -> can-table test-bit if
            \ Check if this bit represents a trait (not the class itself)
            i target-class -> classifier# @ <> if
                \ Find which trait has this classifier#
                \ This is a bit hacky - we walk the dictionary looking for traits
                i to target-bit
                ['] find-trait forth-wordlist WalkWordList
            then
        then
    loop
    
    found-items 0= if ."        (no traits applied)" cr then ;

: .class ( class - )
    \ Print detailed information about a class
    [[
    me valid-class? not if ." Not a valid class." exit then
    
    cr
    ."     Class: " me body> >name count type cr
    ."     Instance size: " instance-size @ . ." bytes" cr
    ."     Field-space: " field-space-size @ ?dup if . ." bytes" else ." none" then cr
    ."     Mapped space: " next-ofs @ ?dup if . ." bytes" else ." none" then
        instance-size @ next-ofs @ - ?dup if ."  ("  . ." remaining)" then cr
    ."     Classifier #: " classifier# @ . cr
    ."     Properties: " property-list .list
    ."     Protocols: (not currently tracked!)" cr \ protocol-list .list
    ."     Dependents: " dependents .list 
    
    me .traits
    me .parents
    ]] ;

: .trait ( trait  - )
    \ Print detailed information about a class
    [[
    me valid-trait? not if ." Not a valid trait." exit then
    
    cr
    ."     Trait: " me body> >name count type cr
    ."     Classifier #: " classifier# @ . cr
    ."     Properties: " property-list .list
    ."     Protocols: " protocol-list .list
    ."     Dependents: " dependents .list
    
    me .parents
    ]] ;


|| : ?.class ( thread# nfa - f )
    {: thread# nfa | body :}
    nfa name> >body to body
    body -> cla @ _class = if
        ."         - " nfa count type cr
        1 +to found-items        
    then -1 ;

|| : ?.trait ( thread# nfa - f )
    {: thread# nfa | body :}
    nfa name> >body to body
    body -> cla @ _trait = if
        ."         - " nfa count type cr
        1 +to found-items        
    then -1 ;

: .nibs ( - )
    cr
    ."     Classes:" cr
    0 to found-items
    ['] ?.class forth-wordlist WalkWordList 
    ."         Total: " found-items . cr cr
    ."     Traits:" cr
    0 to found-items
    ['] ?.trait forth-wordlist WalkWordList 
    ."         Total: " found-items . cr
    cr
    ."     Static field allocation: " /static . ." bytes (" /classifier /static - . ." remaining)" cr
    cr
    ;
    
: ?object ( ... class <name> - ... obj -1 | obj 0 )
    \ Returns true if the object already existed.
    \ Contructor parameters are consumed if it didn't (it is contructed with MAKE)
    {: class0 | obj0 :} 
    preword find if 
        >body to obj0 
        obj0 -> cla @ class0 = if
            bl word drop
            obj0 exit
        then
    else
        drop
    then 
    create class0 make ;
