fast[

crucial test: check-object ( a - a n:res )
    dup  valid-object? ;
        
before [[ check-object
wrap-word [[

\ ------------------------------------------------------------------------------
\ NOTE: This will NOT work!!! it wraps DO-MESSAGE not the message itself!!!
\
\ before do-message check-object
\ borrow nib~ do-message
\ wrap-word do-message
\ 
\ validations dup @ swap on \ important!
\     : does-validated-message  does> swap do-message ;
\ validations !
\ 
\ : m: ( - <name> <code> ; ) ( ... obj - ... ) 
\     static does-validated-message dispatch, ;
\ ------------------------------------------------------------------------------

: ?prop ( n - n )
    validations @ -exit
    dup 0= abort" ?PROP >> Property not mapped for this class!" ;

: prop+ ( object offset - a )
    \ Optimizes down to two instructions with validations off 
    fast[ s" over cla-offset + @ + @" evaluate fast]
    validations @ if s" ?prop" evaluate then
    s" +" evaluate ; immediate

\ -----------------------------------------------------------------------------
\ This is redefined here because FAST[ FAST] have been defined at this point
: does-property 
    immediate does> fast[ >property fast] ; 
\ -----------------------------------------------------------------------------


\ -----------------------------------------------------------------------------
\ THIS DOESN'T WORK WITH UNBOUND-DISPATCH
\ : validate-dispatch ( - )
\     me valid-object? not 
\         abort" VALIDATE-DISPATCH >> Invalid object." ;

\ : ?compile-validate-dispatch ( - )
\     validations @ if s" validate-dispatch" evaluate then ;
\ -----------------------------------------------------------------------------

aka (->) ->

: validate-object
    dup valid-object? not 
        abort" VALIDATE-DISPATCH >> Invalid object." ;

: -> 
    validations @ if
        s" validate-object" evaluate
    then
    postpone (->) ; immediate


crucial test: CHECK-BITMAPS-OVERFLOW ( ALLEGRO_BITMAP - ALLEGRO_BITMAP res )
    next-bmp# @ #bitmaps < ;

before +bitmap CHECK-BITMAPS-OVERFLOW

charmful test: CHARMFUL-BITMAP-INDEX ( n - n res )
    dup $ffff and 0 #bitmaps 1 - within 
    dup 0= if
        s" Invalid bitmap index (non-crucial, only reported on first failure for word)" log-warning
        current-validation @ off \ validation disables individually for each word on its first failure
    then ;

crucial test: CRUCIAL-BITMAP-INDEX ( n - n res )
    dup $ffff and 0 #bitmaps 1 - within ;

before bitmap@ CHARMFUL-BITMAP-INDEX
before put CHARMFUL-BITMAP-INDEX
before bmpwh CHARMFUL-BITMAP-INDEX
before bitmap-file CRUCIAL-BITMAP-INDEX

fast]