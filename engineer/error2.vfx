\ ------------------------------------------------------------------------------
\ Better VFX error reporting
\ ------------------------------------------------------------------------------

fast[

private

0
       cell    field   ContextFlags

       cell    field   Dr0     \ valid if CONTEXT_DEBUG_REGISTERS
       cell    field   Dr1     \ flag is set in ContextFlags
       cell    field   Dr2
       cell    field   Dr3
       cell    field   Dr6
       cell    field   Dr7

       #112    field   FloatSave

       cell    field   SegGs   \ valid if CONTEXT_SEGMENTS flag is
       cell    field   SegFs   \ set in ContextFlags
       cell    field   SegEs
       cell    field   SegDs

       cell    field   Edi     \ valid if CONTEXT_INTEGER flag is
       cell    field   Esi     \ set in context flags
       cell    field   Ebx
       cell    field   Edx
       cell    field   Ecx
       cell    field   Eax

       cell    field   Ebp     \ valid if CONTEXT_CONTROL is set
       cell    field   Eip
       cell    field   SegCs
       cell    field   EFlags
       cell    field   Esp
       cell    field   SegSs
constant /context

create context /context allot
create rs 16 cells allot
create ds 16 cells allot

: lookup-exception  ( n - z$ )
    case  
        EXCEPTION_DATATYPE_MISALIGNMENT     of Z" Misaligned data type" endof
        EXCEPTION_BREAKPOINT                of Z" Breakpoint encountered" endof
        EXCEPTION_SINGLE_STEP               of Z" Single step exception" endof
        EXCEPTION_ACCESS_VIOLATION          of Z" Access violation" endof
        EXCEPTION_IN_PAGE_ERROR             of Z" Page violation" endof
        EXCEPTION_ILLEGAL_INSTRUCTION       of Z" Illegal Instruction" endof
        EXCEPTION_ARRAY_BOUNDS_EXCEEDED     of Z" Array Bounds Exceeded" endof
        EXCEPTION_FLT_DENORMAL_OPERAND      of Z" Floating point operard is denormal" endof
        EXCEPTION_FLT_DIVIDE_BY_ZERO        of Z" Floating point divide by zero" endof
        EXCEPTION_FLT_INEXACT_RESULT        of Z" Floating point operation cannot be expressed exactly" endof
        EXCEPTION_FLT_INVALID_OPERATION     of Z" Undefined floating point exception" endof
        EXCEPTION_FLT_OVERFLOW              of Z" Floating point overflow" endof
        EXCEPTION_FLT_STACK_CHECK           of Z" Stack failure due to floating point operation" endof
        EXCEPTION_FLT_UNDERFLOW             of Z" Floating point underflow" endof
        EXCEPTION_INT_DIVIDE_BY_ZERO        of Z" Integer divide by zero" endof
        EXCEPTION_INT_OVERFLOW              of Z" Integer overflow" endof
        EXCEPTION_PRIV_INSTRUCTION          of Z" Cannot execute privileged instruction" endof
        EXCEPTION_STACK_OVERFLOW            of Z" Windows stack overflow" endof
        $-DEAD                              of Z" Translated to THROW" endof	\ MPE004
        drop Z" Undefined"
    end-case ;

: .ip ( a - )
    dup body> inForth? if
        dup ip>nfa dup count ltype
        name> - ?dup if
            ." +" .
        else
            space
        then
    else . then ;

: .data ( a - )
    dup body> inForth? if
        dup ip>nfa dup count ltype
        name> >body - ?dup if
            ." +" .
        else
            space
        then
    else . then ;

\    >r
\    r@ 0= if
\        ." ( 0 ) "
\        r> drop exit
\    then
\    r@ ip>nfa dup count type
\    ."  ( " r@ h.8
\    ." + " name>  r> swap - .
\    ." ) " ;

\ : .ip ( a - )
\     .name ;

: rtrace ( a n - )
    ."         "
    swap over cells + swap
    for cell- dup @ .ip loop drop ;

: dtrace ( a n - )
    ."         "
    swap over cells + swap
    for cell- dup @ .data loop drop ;

\ Print stack info on exceptions
\ ------------------------------

5 cells constant /es-frame

: null-catch-save  0 ;

public

: .catch ( throw-code - )
    -exit
    cr ." Caught: "
    \ >r  \ save throw code
    \ .s
    \ r>  \ restore throw code
    rp@ 1 cells + (.rs)
    cr ;

: .throw-catch ( throw-code - )
    dup .throw .catch ;

private

: debug-catch-restore  \ throw-code n -- throw-code
    drop
    \ dup -1 = if exit then \ silent throw
    \ dup 0= if exit then \ not an error
    exc0 @ excp @ - /es-frame / 1 = -exit
    dup .catch ;
  
: console-debugger ( err context - filter? )
    ( context ) context /context move
    cr \ ." Windows exception: "
    ( err ) dup h.8 lookup-exception zcount type cr
    context -> ESP @ rs 16 cells move
    context -> EBP @ ds 16 cells move
    ."     In: " context -> EIP @ .ip cr
    ."     Call stack: " cr 
    rs 8 rtrace cr
    ."     Data stack: " cr
    ds
    \ DOESN'T WORK!  s0 @ returns some other address; must be in a different user context here
    \  s0 @  context -> EBP @   .s  -  cell/  
    8 dtrace cr
    -1 ;
  
\ : ?debugger ( err context - filter? )
\     ide @ if ide-debugger else [ ' debugger >body @ compile, ] then ;
    
\ Assign system hooks
\ -------------------

\ ' null-catch-save ' debug-catch-restore extends-catch
' console-debugger to-callback debugger

fast]
