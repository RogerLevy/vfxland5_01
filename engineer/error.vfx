\ ------------------------------------------------------------------------------
\ Better error reporting
\ ------------------------------------------------------------------------------

0
||        cell    field   context.ContextFlags

||        cell    field   context.Dr0     \ valid if CONTEXT_DEBUG_REGISTERS
||        cell    field   context.Dr1     \ flag is set in ContextFlags
||        cell    field   context.Dr2
||        cell    field   context.Dr3
||        cell    field   context.Dr6
||        cell    field   context.Dr7

||        #112    field   context.FloatSave

||        cell    field   context.SegGs   \ valid if CONTEXT_SEGMENTS flag is
||        cell    field   context.SegFs   \ set in ContextFlags
||        cell    field   context.SegEs
||        cell    field   context.SegDs

||        cell    field   context.Edi     \ valid if CONTEXT_INTEGER flag is
||        cell    field   context.Esi     \ set in context flags
||        cell    field   context.Ebx
||        cell    field   context.Edx
||        cell    field   context.Ecx
||        cell    field   context.Eax

||        cell    field   context.Ebp     \ valid if CONTEXT_CONTROL is set
||        cell    field   context.Eip
||        cell    field   context.SegCs
||        cell    field   context.EFlags
||        cell    field   context.Esp
||        cell    field   context.SegSs
|| dup constant /context
|| create context allot

create callers

: #.  base @ >r  decimal . r> base ! ;

: lookup-exception  ( n - z$ )
    case  
        EXCEPTION_DATATYPE_MISALIGNMENT     of Z" Misaligned data type" endof
        EXCEPTION_BREAKPOINT                of Z" Breakpoint encountered" endof
        EXCEPTION_SINGLE_STEP               of Z" Single step exception" endof
        EXCEPTION_ACCESS_VIOLATION          of Z" Access violation" endof
        EXCEPTION_IN_PAGE_ERROR             of Z" Page violation" endof
        EXCEPTION_ILLEGAL_INSTRUCTION       of Z" Illegal Instruction" endof
        EXCEPTION_ARRAY_BOUNDS_EXCEEDED     of Z" Array Bounds Exceeded" endof
        EXCEPTION_FLT_DENORMAL_OPERAND      of Z" Floating point operard is denormal" endof
        EXCEPTION_FLT_DIVIDE_BY_ZERO        of Z" Floating point divide by zero" endof
        EXCEPTION_FLT_INEXACT_RESULT        of Z" Floating point operation cannot be expressed exactly" endof
        EXCEPTION_FLT_INVALID_OPERATION     of Z" Undefined floating point exception" endof
        EXCEPTION_FLT_OVERFLOW              of Z" Floating point overflow" endof
        EXCEPTION_FLT_STACK_CHECK           of Z" Stack failure due to floating point operation" endof
        EXCEPTION_FLT_UNDERFLOW             of Z" Floating point underflow" endof
        EXCEPTION_INT_DIVIDE_BY_ZERO        of Z" Integer divide by zero" endof
        EXCEPTION_INT_OVERFLOW              of Z" Integer overflow" endof
        EXCEPTION_PRIV_INSTRUCTION          of Z" Cannot execute privileged instruction" endof
        EXCEPTION_STACK_OVERFLOW            of Z" Windows stack overflow" endof
        $-DEAD                              of Z" Translated to THROW" endof	\ MPE004
        drop Z" Undefined"
    end-case ;

: .ip ( a - )
    >r
    r@ h.
    r@ ip>nfa dup count type
    ."  + " name>  r> swap - . ;

defer .apperr
' noop is .apperr

|| : os-trace \ for OS exceptions
    cr ."  In: " context context.EIP @ .word
    cr ."  Call stack: "
    cr ."    " callers @ .ip
    cr ."    " callers cell+ @ .ip
    cr ."    " callers 2 cells + @ .ip 
    cr ."    " callers 3 cells + @ .ip 
    cr ."    " callers 4 cells + @ .ip 
    cr ."    " callers 5 cells + @ .ip ;

|| : .postinfo
    .source-line EditOnError
    cr ."  Stack: ( " depth . ." ) " .s
    cr .apperr ;

: .error  ( n - )
    dup Err$ nip if
        dup -57005 <> if
            \ Forth exception - TODO: Forth stack trace
            cr space Err$ .Err
        else
            \ OS exception
            drop
            os-trace
        then
    else
        dup -2 = if
            drop 'AbortText @ DoAbortMessage
        else
            cr ."  No text available for THROW code "
            #.
        then
    then
    .postinfo
;

\ : .abort ( caddr )
\     count type os-trace .postinfo ;

: handle-os-exception  ( err context - filter? )
    ( context ) context /context move
    cr ."  Windows exception: "
    ( err ) lookup-exception zcount type
    context context.Esp @ callers 3 cells move
    -1
;
    
assign .error to-do DoErrorMessage
' handle-os-exception to-callback debugger
\ assign .abort to-do DoAbortMessage