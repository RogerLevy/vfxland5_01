\ =============================================================================
\ Filesystem
\ =============================================================================

: dir-exists? ( a n - f )
    >zpad GetFileAttributes -1 <> ;

: each-file ( path:a n xt - ) ( a n - )
    -rot >zpad al_create_fs_entry locals| e xt |
    e al_open_directory if
        begin  e al_read_directory ?dup while
            >r 
            r@ al_get_fs_entry_mode ALLEGRO_FILEMODE_ISFILE AND if
                r@ al_get_fs_entry_name zcount xt execute
            then
            r> al_destroy_fs_entry
        repeat
        e al_close_directory drop    
    else
        -1 abort" Couldn't open directory"
    then 
    e al_destroy_fs_entry ;

: each-file-and-dir ( path:a n xt - ) ( a n - )
    -rot >zpad al_create_fs_entry locals| e xt |
    e al_open_directory if
        begin  e al_read_directory ?dup while
            >r 
            \ r@ al_get_fs_entry_mode ALLEGRO_FILEMODE_ISFILE AND if
                r@ al_get_fs_entry_name zcount xt execute
            \ then
            r> al_destroy_fs_entry
        repeat
        e al_close_directory drop    
    else
        -1 abort" Couldn't open directory"
    then 
    e al_destroy_fs_entry ;

: >datadir ( a n - a n )
    s" dat" dir-exists? if s" " else s" ..\" then f" %sdat\%s" ;

: ensure-dir ( fp len - )
    {: | err zstr[ 256 ] :}
    normalize zstr[ zplace
    0 zstr[ 0 SHCreateDirectoryExA to err
    err ERROR_FILE_EXISTS =
    err ERROR_ALREADY_EXISTS = or not 
    err 0<> and if
        zstr[ zcount f" Error creating directory: %s" -1 -rot .abort 
    else
        zstr[ zcount f" Created directory: %s" type cr
    then ;

variable dump#

: dumpsys
    s" dumps" ensure-dir
    ['] vfxcore here over - 
    dump# @ f" dumps/dump%03n.bin" write 
    1 dump# +! ;
