element-class canvas%
borrow be/ the-bmp
borrow be/ c1
borrow be/ mouse
borrow be/ lb
borrow be/ rb
: backing ( w h -)
    at@ 2+ 2>r
        at@f `` 2r> 2s>f `` 
        .1e .1e .1e .75e ```` al_draw_filled_rectangle ;
: box ( w h -)
    1e sx @ p>f f/ f>ds >r
    at@ 2+ 2>r
        at@f `` 2r> 2s>f `` 
        1e 1e 1e 1e ```` r> ` al_draw_rectangle ;
\ : c  f>ds >r dup 24 >> s>f 255e f/ r> ;
\ : rgb@f  @ c 8 << c 8 << c drop ;
: 4f@  sf@+ sf@+ sf@+ sf@ ;
: pixel ( -)
    at@ 1 1 2+ 2>r
        at@f `` 2r> 2s>f `` 
        c1 4f@ ```` al_draw_filled_rectangle ;
: opaque ALLEGRO_ADD ALLEGRO_ONE ALLEGRO_ZERO al_set_blender ;
: transparent ALLEGRO_ADD ALLEGRO_ALPHA ALLEGRO_INVERSE_ALPHA al_set_blender ;
: onto  bitmap@ ?dup -exit al_set_target_bitmap ;
: -onto  display al_get_backbuffer al_set_target_bitmap ;
: dot  the-bmp @ onto +m identity opaque pixel -m -onto transparent ;
: eyedrop  the-bmp @ bitmap@ ?dup -exit c1 swap at@ al_get_pixel ;
: in?  mouse >local 2dup ```` 0 0 `` the-bmp @ bmpwh 1 1 2- `` overlap? ;
: act-paint
    act>
        ctrl? ?exit
        in? -exit
        lb if mouse >local at dot then
        rb if mouse >local at eyedrop then ;
canvas% :: init
    act-paint
    draw>
        the-bmp @ -exit
        the-bmp @ bmpwh backing
        the-bmp @ bmpwh box 
        the-bmp @ $ffff and put ;
