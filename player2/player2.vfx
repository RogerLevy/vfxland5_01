include %idir%\aclient.vfx

16 request object-array player2-requests
player2-requests aclient object player2
cstring p2key$
cstring npc$

: game-client-id s" 01993e9f-bc67-7182-b044-4df0c82aa295" ;

: p2key-write ( cjson - )
    z" p2Key" get-string p2key$ place
    p2key$ count type cr ;

: init-player2 ( - request ) 
    player2 init
    game-client-id f" http://localhost:4315/v1/login/web/%s"
    player2 post>
        ['] p2key-write write-xt !
        s" " setfields
        me ;

: npc-create-write ( cjson - )
    get-string-content npc$ place
    npc$ count type cr ;

: npc-create ( payload len - request )
    s" https://api.player2.game/v1/npcs/spawn" 
    player2 post>
        0 
        p2key$ count f" Authorization: Bearer %s" >zpad curl_slist_append 
        z" Content-Type: application/json" curl_slist_append 
        \ z" User-Agent: MyApp/1.0" curl_slist_append 
        setheaders
        ( payload len ) setfields 
        ['] npc-create-write write-xt !
        me
;

: npc-send ( payload len npc len - )
    f" https://api.player2.game/v1/npcs/%s/chat" 
    player2 post>
        0 
        p2key$ count f" Authorization: Bearer %s" >zpad curl_slist_append 
        z" Content-Type: application/json" curl_slist_append 
        z" Accept: text/plain; charset=US-ASCII" curl_slist_append 
        setheaders
        ( payload len ) 
        setfields
;

variable on-response ( a len - )
create msg$$ 65536 allot&erase
variable msg-waiting

: listen-write ( cjson - )
    z" message" get-string msg$$ wplace 
    10 push-attribute
    msg$$ wcount type cr 
    pop-attribute
    msg-waiting on ;

: listen ( - )
    \ begin
        s" https://api.player2.game/v1/npcs/responses" 
        player2 get>
            0 
            p2key$ count f" Authorization: Bearer %s" >zpad curl_slist_append 
            z" Accept: text/plain; charset=US-ASCII" curl_slist_append 
            setheaders
            streaming on 
            ['] listen-write write-xt !
            hist-dev op !
    \     on-complete>
    \         me player2 remove-request
    \ again
;

create systemprompt$$ 5000 allot&erase
s" Speak concisely.  Assume a constrained space for displaying messages.  The length of each of your messages must be no more than 300 characters. \n"
systemprompt$$ wplace
s" IF AND ONLY IF it is appropriate to the situation AND does not violate the inventory rule, the NPC may issue one or more system commands, separated by spaces. Each command must be in the format `|command optional_param|`. \n"
systemprompt$$ wappend
s" These commands represent actions that the NPC can take to have a direct effect on the game and should not be confused for imperatives directed at the player. \n"
systemprompt$$ wappend
s" IMPORTANT: Commands that are not listed in the current game state are considered INVALID.  ONLY issue valid commands that are listed in the game state. \n"
systemprompt$$ wappend
s" **CRITICAL**: Giving items that the NPC does not actually possess - even if the command is available - is IMPOSSIBLE and PROHIBITED. \n" 
systemprompt$$ wappend
s" Again, items that are not in your inventory CANNOT be given to the player.  Doing so will result in a system error and must be avoided. \n"
systemprompt$$ wappend

: npc-fields
    s[
        .\" {\"name\": \"Captain Blackbeard\","
        .\" \"short_name\": \"Captain\","
        .\" \"character_description\": \"A weathered pirate captain with a love for treasure and adventure\","
        systemprompt$$ wcount fe" \"system_prompt\": \"You are Captain Blackbeard, speak like a pirate and help players find treasure. \\n\\n %s \","  type
        .\" \"tts\": {"
        .\" \"voice_ids\": [\"01955d76-ed5b-753f-9f74-c0674216f0f5\"],"
        .\" \"speed\": 1.0,"
        .\" \"audio_format\": \"mp3\"}}"
    s] ;

create gamestate$$ 5000 allot&erase

: chat ( msg len npc len - )
    s[
        .\" {\"sender_name\": \"Roger\","
        2swap ( npc len msg len ) fe" \"sender_message\": \"%s\"," type
        gamestate$$ wcount fe" \"game_state_info\": \"%s\"}" type
    s] 2swap npc-send ;
    
variable ctr
: ?health
    ctr @
    mstime 60000 / ctr !
    ctr @ <> -exit
    s" https://api.player2.game/v1/health" player2 get>
        ." Health!" cr
        0 
        p2key$ count f" Authorization: Bearer %s" >zpad curl_slist_append 
        setheaders ;

: ?parse
    msg-waiting @ -exit
    on-response @ ?dup if msg$$ wcount rot execute then 
    msg-waiting off ;

: process-chat  
    player2 process   ?health   ?parse ;

vocabulary commands

: (parse-response) ( a len - )
    only previous previous commands
    begin '|' scan dup while
        1 /string
        2dup \ remainder
        '|' cutoff evaluate
        '|' scan 1 /string
    repeat 
    2drop ;

: parse-response ( a len - )
    push-order
    ['] (parse-response) catch ?dup if .throw 2drop then
    pop-order ;

['] parse-response on-response !

honing @ [if]

    : blocking
        begin process-chat 100 ms key? until ;

    : in-engineer
        show> process-chat ;

    : state: 0 parse gamestate$$ wplace ;
    : +state: s" \n" gamestate$$ wappend   0 parse gamestate$$ wappend ;
    : say: 0 parse npc$ count chat ;

    \ state: Player is at the bottom of a well and everybody thinks he is just the spirit of a deceased boy
    state: Player is on a beach.  
    +state: After responding, if the NPC chooses, they may issue one or system commands, separated by spaces.  Each command must be in the format `|command optional_param|`.  These commands will have a real effect in the game.  
    +state: IMPORTANT: Commands that are not listed are considered INVALID.  ONLY issue valid, listed commands. 
    +State: The following is the list of available system commands:  \n |npc-give-map| \n |npc-give-gold amount| \n |npc-steal-gold amount| \n |npc-give-sword| \n |npc-give-lamp| \n |npc-give-parrot name| \n |npc-draw-sword| \n |npc-flee|

    also commands definitions
    : npc-give-map   ." Got map" cr ;
    : npc-give-sword   ." Got sword" cr ;
    : npc-give-lamp   ." Got lamp" cr ;
    : npc-give-parrot   ." Got parrot named "  0 parse type cr ;
    : npc-give-gold  ." Got gold of amount "  0 parse evaluate . cr ;
    : npc-steal-gold  ." Lost gold of amount "  0 parse evaluate . cr ;
    : npc-flee  ." NPC ran away" cr ;
    : npc-draw-sword  ." NPC initiated battle" cr ;
    previous definitions

    s" Testing. |npc-give-map| |npc-give-gold 123| Testing. |npc-give-parrot Squawkbeak|" parse-response

    : test
        CURL_GLOBAL_DEFAULT curl_global_init
        abort" curl_global_init failed"
        init-player2 as>
        on-complete> 
        listen 
        npc-fields npc-create as>
        on-complete>
        s" Hello." npc$ count chat ;

    going @ [if]
        test in-engineer
    [else]
        test blocking
    [then]
[then]